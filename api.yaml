openapi: 3.0.3

info:
  title: RaceDay API
  version: "0.9"


paths:

  /access_token:

    get:
      operationId: accessTokenGet

      summary: Provides a new access token. Access tokens expire after a configurable amount of time (24 hours by
        default). Note also that access tokens are tied to your IP address, so you will need to acquire a new access
        token if you use a different host or connect via a different means.

      parameters:
        - name: Username
          in: header
          required: true
          schema:
            type: string
        - name: Password
          in: header
          required: true
          schema:
            type: string

      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "401":
          description: Invalid credentials.

  /broadcast:

    delete:
      operationId: broadcastDelete

      summary: Deletes a broadcast.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Broadcast not found.

    post:
      operationId: broadcastPost

      summary: Creates a new broadcast.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: ["Cable", "Facebook", "MotorTrend", "Other", "YouTube"]
        - name: event_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: url
          in: query
          schema:
            type: string
            format: uri

      responses:
        "200":
          description: Successful response indicating the ID of the new broadcast.
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "403":
          description: Unauthorized.

    put:
      operationId: broadcastPut

      summary: Updates a broadcast.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          required: true
          schema:
            type: string
            enum: ["Cable", "Facebook", "MotorTrend", "Other", "YouTube"]
        - name: event_id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: url
          in: query
          schema:
            type: string
            format: uri

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Broadcast or referenced event not found.

  /broadcasts:

    delete:
      operationId: broadcastsDelete

      summary: Deletes broadcasts.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              format: uuid

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: One or more broadcasts not found.

    get:
      operationId: broadcastsGet

      summary: Retrieves broadcasts per the specified criteria. All parameters are optional.

      parameters:
        - name: event_id
          in: query
          description: An ID of an event for which to retrieve broadcasts.
          schema:
            type: string
            format: uuid
        - name: event_start
          in: query
          description: A UNIX timestamp indicating a particular date on which returned broadcasts must start.
          schema:
            type: number
            format: int64
        - name: include_all_after
          in: query
          description: Indicates that the event_start parameter should be the earliest that returned broadcast must
            start, but any broadcast that airs after that time will also be included.
          schema:
            type: boolean
            default: false

      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Broadcast"
        "404":
          description: Event not found.

    put:
      operationId: broadcastsput

      summary: Updates broadcasts.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Broadcast"

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: One or more referenced events not found.

  /event:

    delete:
      operationId: eventDelete

      summary: Deletes an event.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Event not found.

    post:
      operationId: eventPost

      summary: Creates a new event.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: start
          in: query
          required: true
          schema:
            type: number
            format: int64
        - name: description
          in: query
          schema:
            type: string
        - name: location_id
          in: query
          schema:
            type: string
            format: uuid
        - name: series_id
          in: query
          schema:
            type: string
            format: uuid

      responses:
        "200":
          description: Successful response indicating the ID of the new event.
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "403":
          description: Unauthorized.

    put:
      operationId: eventPut

      summary: Updates an event.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: start
          in: query
          required: true
          schema:
            type: number
            format: int64
        - name: description
          in: query
          schema:
            type: string
        - name: location_id
          in: query
          schema:
            type: string
            format: uuid
        - name: series_id
          in: query
          schema:
            type: string
            format: uuid

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Event not found.

  /events:

    get:
      operationId: eventsGet

      summary: Retrieves events in the database for the specified date or dates.

      parameters:
        - name: window_start
          in: query
          description: A UNIX timestamp indicating a particular date on which returned events must start.
          required: true
          schema:
            type: number
            format: int64
        - name: window_end
          in: query
          description: An optional UNIX timestamp indicating the end of a window in which returned events must start,
            where `window_start` indicates the beginning of the window. If not specified, only events that start on the
            date indicated by `window_start` will be returned. If -1 is specified, all events that occur on or after the
            date indicated by `window_start` are returned.
          schema:
            type: number
            format: int64

      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"

  /location:

    delete:
      operationId: locationDelete

      summary: Deletes a location.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Location not found.

    post:
      operationId: locationPost

      summary: Creates a new location.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string

      responses:
        "200":
          description: Successful response indicating the ID of the new location.
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "403":
          description: Unauthorized.

    put:
      operationId: locationPut

      summary: Updates a location.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Location not found.

  /locations:

    get:
      operationId: locationsGet

      summary: Retrieves the locations currently defined in the system.

      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Location"

  /series:

    delete:
      operationId: seriesDelete

      summary: Deletes a series.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Series not found.

    get:
      operationId: seriesGet

      summary: Retrieves the series currently defined in the system.

      responses:
        "200":
          description: Successful response.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Series"

    post:
      operationId: seriesPost

      summary: Creates a new series.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string

      responses:
        "200":
          description: Successful response indicating the ID of the new series.
          content:
            application/json:
              schema:
                type: string
                format: uuid
        "403":
          description: Unauthorized.

    put:
      operationId: seriesPut

      summary: Updates a series.

      parameters:
        - $ref: "#/components/parameters/AccessTokenParam"
        - name: id
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string

      responses:
        "200":
          description: Successful response.
        "403":
          description: Unauthorized.
        "404":
          description: Series not found.


components:

  parameters:

    AccessTokenParam:
      in: header
      name: AccessToken
      schema:
        type: string
      required: true


  schemas:

    Broadcast:
      type: object
      properties:
        id:
          type: string
          format: uuid
        type_:
          type: string
          enum: [ "Cable", "Facebook", "MotorTrend", "Other", "YouTube" ]
        event:
          $ref: "#/components/schemas/Event"
        url:
          type: string
      required:
        - id
        - type
        - event

    Event:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        start:
          type: number
          format: int64
        description:
          type: string
        location:
          $ref: "#/components/schemas/Location"
        series:
          $ref: "#/components/schemas/Series"
      required:
        - id
        - name

    Location:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name

    Series:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
      required:
        - id
        - name

    SystemUser:
      type: object
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        when_created:
          type: integer
        who_created:
          type: string
        when_updated:
          type: integer
        who_updated:
          type: string
        enabled:
          type: boolean
      required:
        - id
        - when_created
        - enabled

    UnsavedBroadcast:
      type: object
      properties:
        type_:
          type: string
          enum: ["Cable", "Facebook", "MotorTrend", "Other", "YouTube"]
        event_id:
          type: string
          format: uuid
        url:
          type: string
      required:
        - type_
        - event_id
